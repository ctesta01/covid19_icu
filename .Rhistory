k <- SIR_intervention()
source('~/Schools/simplified_florida_model.R', echo=TRUE)
k <- SIR_intervention()
c(beta11, beta12)
beta_matrix11= diag(beta11, 67)*(1-inter_region) + inter_region* ones* beta11;
beta_matrix12= diag(beta12, 67)*(1-inter_region) + inter_region* ones* beta12;
c(diag(1,11), diag(1,11))
cbind(diag(1,10,10), diag(1,10,10))
source('~/Schools/simplified_florida_model.R', echo=TRUE)
k <- SIR_intervention()
plot(k$S11)
plot(k$S)
k$S13
plot(k$S13)
plot(k$E13)
source('~/Schools/simplified_florida_model.R', echo=TRUE)
k <- SIR_intervention()
plot(k$E13)
source('~/Schools/simplified_florida_model.R', echo=TRUE)
k <- SIR_intervention()
plot(k$E13)
k <- SIR_intervention(timeframe=30)
plot(k$E13)
source('~/Schools/simplified_florida_model.R', echo=TRUE)
k <- SIR_intervention(timeframe=30)
plot(k$E13)
k <- SIR_intervention(timeframe=60)
florida_adjacency()
print(florida_adjacency())
k<-(florida_adjacency())
k
florida_adjacency <- function(){
counties<-read.csv("county_adj.csv",header=FALSE,stringsAsFactors=FALSE,sep=",")
rNames<-counties[-1,1]                                   # Get row names
cNames<-as.vector(as.character(counties[1,-1]))          # Get column names
counties<-apply(as.matrix(counties[-1,-1]),2,as.numeric) # Get network matrix
counties[is.na(counties)]<-0                             # Set missing ties to 0
row.names(counties)<-1:67# rNames                        # Give row names
colnames(counties)<- 1:67# cNames                        # Give column names
}
k<-(florida_adjacency())
k
counties<-read.csv("county_adj.csv",header=FALSE,stringsAsFactors=FALSE,sep=",")
rNames<-counties[-1,1]
cNames<-as.vector(as.character(counties[1,-1]))          # Get column names
counties<-apply(as.matrix(counties[-1,-1]),2,as.numeric) # Get network matrix
counties[is.na(counties)]<-0                             # Set missing ties to 0
row.names(counties)<-1:67# rNames                        # Give row names
colnames(counties)<- 1:67# cNames
counties
source('~/Schools/simplified_florida_model.R', echo=TRUE)
k <- SIR_intervention(timeframe=60)
plot(k$S11)
source('~/Schools/simplified_florida_model.R', echo=TRUE)
k <- SIR_intervention(timeframe=60)
source('~/Schools/simplified_florida_model.R', echo=TRUE)
k <- SIR_intervention(timeframe=60)
k <- SIR_intervention(timeframe=60, inter_region = 0.8)
source('~/Schools/simplified_florida_model.R', echo=TRUE)
k <- SIR_intervention(timeframe=60, inter_region = 0.8)
approxfun(c(1,2,3), rule=2)
c<-approxfun(c(1,2,3), rule=2)
c(2)
cd<-approxfun(c(1,2,3), rule=2)
cd<-approxfun(c(1,2,3), rule=2)
cd()
cd(1)
cd(12)
cd(18)
cd(2)
cd(3)
cd(2.5)
cd<-approxfun(c(1,2,4), rule=2)
cd(2.5)
diag(cd, 2,2)
dc<-approxfun(c(1,2,4), rule=2)
cd+dc
cd()+dc()
c(cd, 0)
matrix(c(cd, 0, 0, cd), ncol=2)
matrix(c(cd, 0, 0, cd), ncol=2)(1)
sum(cd, dc)
diag(1, 67)
beta=1
beta_post=0.5
beta11=beta12=beta13=beta21=beta22=beta23=beta31=beta32=beta33=beta;
beta_matrix11= (diag(1, 67) + inter_region* ones)* beta11;
beta_matrix12= (diag(1, 67) + inter_region* ones)* beta12;
beta_matrix13= (diag(1, 67) + inter_region* ones)* beta13;
beta_matrix21= (diag(1, 67) + inter_region* ones)* beta21;
beta_matrix22= (diag(1, 67) + inter_region* ones)* beta22;
beta_matrix23= (diag(1, 67) + inter_region* ones)* beta23;
beta_matrix31= (diag(1, 67) + inter_region* ones)* beta31;
beta_matrix32= (diag(1, 67) + inter_region* ones)* beta32;
beta_matrix33= (diag(1, 67) + inter_region* ones)* beta33;
beta_matrix=rbind(
cbind(
beta_matrix11,beta_matrix12,beta_matrix13
),
cbind(
beta_matrix21,beta_matrix22,beta_matrix23
),
cbind(
beta_matrix31,beta_matrix32,beta_matrix33
)
);
beta11_post=beta12_post=beta13_post=beta21_post=beta22_post=beta23_post=beta31_post=beta32_post=beta33_post=beta_post;
beta_matrix11_post= (diag(1, 67) + inter_region* ones)* beta11_post;
beta_matrix12_post= (diag(1, 67) + inter_region* ones)* beta12_post;
beta_matrix13_post= (diag(1, 67) + inter_region* ones)* beta13_post;
beta_matrix21_post= (diag(1, 67) + inter_region* ones)* beta21_post;
beta_matrix22_post= (diag(1, 67) + inter_region* ones)* beta22_post;
beta_matrix23_post= (diag(1, 67) + inter_region* ones)* beta23_post;
beta_matrix31_post= (diag(1, 67) + inter_region* ones)* beta31_post;
beta_matrix32_post= (diag(1, 67) + inter_region* ones)* beta32_post;
beta_matrix33_post= (diag(1, 67) + inter_region* ones)* beta33_post;
beta_matrix_post=rbind(
cbind(
beta_matrix11_post,beta_matrix12_post,beta_matrix13_post
),
cbind(
beta_matrix21_post,beta_matrix22_post,beta_matrix23_post
),
cbind(
beta_matrix31_post,beta_matrix32_post,beta_matrix33_post
)
);
beta_func <- approxfun(
(times<intervention)*(beta_matrix- beta_post_matrix)+beta_post_matrix,
rule=2)
inter_region=0.2
beta11=beta12=beta13=beta21=beta22=beta23=beta31=beta32=beta33=beta;
beta_matrix11= (diag(1, 67) + inter_region* ones)* beta11;
beta_matrix12= (diag(1, 67) + inter_region* ones)* beta12;
beta_matrix13= (diag(1, 67) + inter_region* ones)* beta13;
beta_matrix21= (diag(1, 67) + inter_region* ones)* beta21;
beta_matrix22= (diag(1, 67) + inter_region* ones)* beta22;
beta_matrix23= (diag(1, 67) + inter_region* ones)* beta23;
beta_matrix31= (diag(1, 67) + inter_region* ones)* beta31;
beta_matrix32= (diag(1, 67) + inter_region* ones)* beta32;
beta_matrix33= (diag(1, 67) + inter_region* ones)* beta33;
beta_matrix=rbind(
cbind(
beta_matrix11,beta_matrix12,beta_matrix13
),
cbind(
beta_matrix21,beta_matrix22,beta_matrix23
),
cbind(
beta_matrix31,beta_matrix32,beta_matrix33
)
);
beta11_post=beta12_post=beta13_post=beta21_post=beta22_post=beta23_post=beta31_post=beta32_post=beta33_post=beta_post;
beta_matrix11_post= (diag(1, 67) + inter_region* ones)* beta11_post;
beta_matrix12_post= (diag(1, 67) + inter_region* ones)* beta12_post;
beta_matrix13_post= (diag(1, 67) + inter_region* ones)* beta13_post;
beta_matrix21_post= (diag(1, 67) + inter_region* ones)* beta21_post;
beta_matrix22_post= (diag(1, 67) + inter_region* ones)* beta22_post;
beta_matrix23_post= (diag(1, 67) + inter_region* ones)* beta23_post;
beta_matrix31_post= (diag(1, 67) + inter_region* ones)* beta31_post;
beta_matrix32_post= (diag(1, 67) + inter_region* ones)* beta32_post;
beta_matrix33_post= (diag(1, 67) + inter_region* ones)* beta33_post;
beta_matrix_post=rbind(
cbind(
beta_matrix11_post,beta_matrix12_post,beta_matrix13_post
),
cbind(
beta_matrix21_post,beta_matrix22_post,beta_matrix23_post
),
cbind(
beta_matrix31_post,beta_matrix32_post,beta_matrix33_post
)
);
beta_func <- approxfun(
(times<intervention)*(beta_matrix- beta_post_matrix)+beta_post_matrix,
rule=2)
adj=florida_adjacency()
ones=adj
florida_adjacency <- function(){
counties<-read.csv("county_adj.csv",header=FALSE,stringsAsFactors=FALSE,sep=",")
rNames<-counties[-1,1]                                   # Get row names
cNames<-as.vector(as.character(counties[1,-1]))          # Get column names
counties<-apply(as.matrix(counties[-1,-1]),2,as.numeric) # Get network matrix
counties[is.na(counties)]<-0                             # Set missing ties to 0
row.names(counties)<-1:67# rNames                        # Give row names
colnames(counties)<- 1:67# cNames                        # Give column names
counties
}
adj=florida_adjacency()
ones=adj
beta11=beta12=beta13=beta21=beta22=beta23=beta31=beta32=beta33=beta;
beta_matrix11= (diag(1, 67) + inter_region* ones)* beta11;
beta_matrix12= (diag(1, 67) + inter_region* ones)* beta12;
beta_matrix13= (diag(1, 67) + inter_region* ones)* beta13;
beta_matrix21= (diag(1, 67) + inter_region* ones)* beta21;
beta_matrix22= (diag(1, 67) + inter_region* ones)* beta22;
beta_matrix23= (diag(1, 67) + inter_region* ones)* beta23;
beta_matrix31= (diag(1, 67) + inter_region* ones)* beta31;
beta_matrix32= (diag(1, 67) + inter_region* ones)* beta32;
beta_matrix33= (diag(1, 67) + inter_region* ones)* beta33;
beta_matrix=rbind(
cbind(
beta_matrix11,beta_matrix12,beta_matrix13
),
cbind(
beta_matrix21,beta_matrix22,beta_matrix23
),
cbind(
beta_matrix31,beta_matrix32,beta_matrix33
)
);
beta11_post=beta12_post=beta13_post=beta21_post=beta22_post=beta23_post=beta31_post=beta32_post=beta33_post=beta_post;
beta_matrix11_post= (diag(1, 67) + inter_region* ones)* beta11_post;
beta_matrix12_post= (diag(1, 67) + inter_region* ones)* beta12_post;
beta_matrix13_post= (diag(1, 67) + inter_region* ones)* beta13_post;
beta_matrix21_post= (diag(1, 67) + inter_region* ones)* beta21_post;
beta_matrix22_post= (diag(1, 67) + inter_region* ones)* beta22_post;
beta_matrix23_post= (diag(1, 67) + inter_region* ones)* beta23_post;
beta_matrix31_post= (diag(1, 67) + inter_region* ones)* beta31_post;
beta_matrix32_post= (diag(1, 67) + inter_region* ones)* beta32_post;
beta_matrix33_post= (diag(1, 67) + inter_region* ones)* beta33_post;
beta_matrix_post=rbind(
cbind(
beta_matrix11_post,beta_matrix12_post,beta_matrix13_post
),
cbind(
beta_matrix21_post,beta_matrix22_post,beta_matrix23_post
),
cbind(
beta_matrix31_post,beta_matrix32_post,beta_matrix33_post
)
);
beta_func <- approxfun(
(times<intervention)*(beta_matrix- beta_post_matrix)+beta_post_matrix,
rule=2)
str(beta_matrix_post)
source('~/Schools/simplified_florida_model.R', echo=TRUE)
k <- SIR_intervention(timeframe=60, inter_region = 0.8)
beta_func <- approxfun(
(times<intervention),
rule=2)
source('~/Schools/simplified_florida_model.R', echo=TRUE)
k <- SIR_intervention(timeframe=60, inter_region = 0.8)
source('~/Schools/simplified_florida_model.R', echo=TRUE)
k <- SIR_intervention(timeframe=60, inter_region = 0.8)
source('~/Schools/simplified_florida_model.R', echo=TRUE)
k <- SIR_intervention(timeframe=60, inter_region = 0.8)
source('~/Schools/simplified_florida_model.R', echo=TRUE)
k <- SIR_intervention(timeframe=60, inter_region = 0.8)
plot(k$S11)
k <- SIR_intervention(timeframe=60, inter_region = 0.8, intervention=4)
plot(k$S11)
15*67
rep(rep(10000,67), 15)
source('~/GitHub/COVID19-FL/codes/simplified_florida_model.R', echo=TRUE)
k <- SIR_intervention(timeframe=60, inter_region = 0.8, intervention=4)
setwd("~/GitHub/COVID19-FL")
source('~/GitHub/COVID19-FL/codes/simplified_florida_model.R', echo=TRUE)
setwd("~/GitHub/COVID19-FL")
k <- SIR_intervention(timeframe=60, inter_region = 0.8, intervention=4)
setwd("~/GitHub/COVID19-FL/codes")
k <- SIR_intervention(timeframe=60, inter_region = 0.8, intervention=4)
source('~/GitHub/COVID19-FL/codes/simplified_florida_model.R', echo=TRUE)
k <- SIR_intervention(timeframe=60, inter_region = 0.8, intervention=4)
source('~/GitHub/COVID19-FL/codes/simplified_florida_model.R', echo=TRUE)
k <- SIR_intervention(timeframe=60, inter_region = 0.8, intervention=4)
source('~/GitHub/COVID19-FL/codes/simplified_florida_model.R', echo=TRUE)
k <- SIR_intervention(timeframe=60, inter_region = 0.8, intervention=4)
source('~/GitHub/COVID19-FL/codes/simplified_florida_model.R', echo=TRUE)
k <- SIR_intervention(timeframe=60, inter_region = 0.8, intervention=4)
source('~/GitHub/COVID19-FL/codes/simplified_florida_model.R', echo=TRUE)
k <- SIR_intervention(timeframe=60, inter_region = 0.8, intervention=4)
source('~/GitHub/COVID19-FL/codes/simplified_florida_model.R', echo=TRUE)
k <- SIR_intervention(timeframe=60, inter_region = 0.8, intervention=4)
source('~/GitHub/COVID19-FL/codes/simplified_florida_model.R', echo=TRUE)
k <- SIR_intervention(timeframe=60, inter_region = 0.8, intervention=4)
source('~/GitHub/COVID19-FL/codes/simplified_florida_model.R', echo=TRUE)
k <- SIR_intervention(timeframe=60, inter_region = 0.8, intervention=4)
source('~/GitHub/COVID19-FL/codes/simplified_florida_model.R', echo=TRUE)
k <- SIR_intervention(timeframe=60, inter_region = 0.8, intervention=4)
source('~/GitHub/COVID19-FL/codes/simplified_florida_model.R', echo=TRUE)
k <- SIR_intervention(timeframe=60, inter_region = 0.8, intervention=4)
source('~/GitHub/COVID19-FL/codes/simplified_florida_model.R', echo=TRUE)
k <- SIR_intervention(timeframe=60, inter_region = 0.8, intervention=4)
source('~/GitHub/COVID19-FL/codes/simplified_florida_model.R', echo=TRUE)
k <- SIR_intervention(timeframe=60, inter_region = 0.8, intervention=4)
source('~/GitHub/COVID19-FL/codes/simplified_florida_model.R', echo=TRUE)
k <- SIR_intervention(timeframe=60, inter_region = 0.8, intervention=4)
plot(k$S110)
plot(k$E110)
source('~/GitHub/COVID19-FL/codes/simplified_florida_model.R', echo=TRUE)
k <- SIR_intervention(timeframe=60, inter_region = 0.8, intervention=4)
plot(k$E110)
plot(k$S110)
source('~/GitHub/COVID19-FL/codes/simplified_florida_model.R', echo=TRUE)
source('~/GitHub/COVID19-FL/codes/simplified_florida_model.R', echo=TRUE)
k <- SIR_intervention(timeframe=60, inter_region = 0.8, intervention=4)
plot(k$S110)
plot(k$E110)
k$I110[1]
k <- SIR_intervention(timeframe=60, inter_region = 0.1, intervention=4)
plot(k$E110)
plot(k$S110)
shiny::runApp('~/GitHub/COVID19-FL')
source('~/GitHub/COVID19-FL/codes/simplified_florida_model.R', echo=TRUE)
warnings()
k <- SIR_intervention(timeframe=60, inter_region = 0.1, intervention=4)
k <- SIR_intervention(timeframe=60, inter_region = 0.1, intervention=4)
source('~/GitHub/COVID19-FL/codes/simplified_florida_model.R', echo=TRUE)
k <- SIR_intervention(timeframe=60, inter_region = 0.1, intervention=4)
update_inputs <- function() {
params = yaml.load_file( system.file("content/parameter_values.yaml") )
params
}
update_inputs()
library(yaml)
update_inputs <- function() {
params = yaml.load_file( system.file("content/parameter_values.yaml") )
params
}
update_inputs()
params = yaml.load_file( system.file("content/parameter_values.yaml") )
params
params = yaml.load_file( system.file("../content/parameter_values.yaml") )
params
params = yaml.load_file( system.file("../content/parameter_values.yaml") )
params
params = yaml.load_file("../content/parameter_values.yaml")
params
str(params)
source('~/GitHub/COVID19-FL/codes/simplified_florida_model.R', echo=TRUE)
k <- SIR_intervention(timeframe=60, inter_region = 0.1, intervention=4)
runApp('~/GitHub/COVID19-FL')
# Load county names
names.dict <- read.csv("data/county_names.csv")
# Load county map
map <- readOGR("data/Florida_Counties/Florida_Counties.shp")
map$COUNTYNAME <- as.character(names.dict$county)[match(map$COUNTYNAME, names.dict$shapefile)]
countynames <- sort(unique(map$COUNTYNAME))
# Load NYT case/death by county
data <- read.csv("data/us-counties.csv")
data <- subset(data, state == "Florida")
data$date <- as.Date(data$date, "%Y-%m-%d")
data$COUNTYNAME <- data$county
last.day <- as.character(format(max(data$date),  "%b %d"))
data.last <- subset(data, date == max(data$date))
total <- aggregate(deaths ~ COUNTYNAME, data = data.last, FUN=sum)
countyData <- merge(map, total, by = "COUNTYNAME", all.x=TRUE)
countyData$deaths[is.na(countyData$deaths)] <- 0
deaths.all <- sum(total$deaths, na.rm=T)
# Total cumulative cases
total <- aggregate(cases ~ COUNTYNAME, data = data.last, FUN=sum)
countyData <- merge(countyData, total, by = "COUNTYNAME", all.x=TRUE)
countyData$cases[is.na(countyData$cases)] <- 0
cases.all <- sum(total$cases, na.rm=T)
countyData
runApp('~/GitHub/COVID19-FL')
source('~/GitHub/COVID19-FL/codes/simplified_florida_model.R', echo=TRUE)
k <- SIR_intervention(timeframe=60, inter_region = 0.1, intervention=4)
source('~/GitHub/COVID19-FL/codes/simplified_florida_model.R', echo=TRUE)
k <- SIR_intervention(timeframe=60, inter_region = 0.1, intervention=4)
source('~/GitHub/COVID19-FL/codes/simplified_florida_model.R', echo=TRUE)
k <- SIR_intervention(timeframe=60, inter_region = 0.1, intervention=4)
k
runApp('~/GitHub/COVID19-FL')
source('~/GitHub/covid19_icu/app.R')
setwd("~/GitHub/covid19_icu")
source('app.R')
devtools::load_all()
runApp()
k[["S1"]]
source('~/GitHub/COVID19-FL/codes/simplified_florida_model.R', echo=TRUE)
k <- SIR_intervention(timeframe=60, inter_region = 0.1, intervention=4)
setwd("~/GitHub/COVID19-FL")
k <- SIR_intervention(timeframe=60, inter_region = 0.1, intervention=4)
setwd("~/GitHub/COVID19-FL/codes")
k <- SIR_intervention(timeframe=60, inter_region = 0.1, intervention=4)
k[["S1"]]
paste("S", 1:10)
paste("S", 1:10, sep="")
k[[paste("S", 1:10, sep="")]]
k[["S1", "S2"]]
k[[c("S1", "S2")]]
k["S1", "S2"]
k$S1
k$S2
k[c("S1", "S2")]
k[c("S1", "S2")]+ k[c("S10", "S20")]
k$S1[61]+k$S10[61]
k$S2[61]+k$S20[61]
source('~/GitHub/COVID19-FL/codes/simplified_florida_model.R', echo=TRUE)
k <- SIR_intervention(timeframe=60, inter_region = 0.1, intervention=4)
florida_adjacency <- function(){
counties<-read.csv("../data/county_adj.csv",header=FALSE,stringsAsFactors=FALSE,sep=",")
rNames<-counties[-1,1]                                   # Get row names
cNames<-as.vector(as.character(counties[1,-1]))          # Get column names
counties<-apply(as.matrix(counties[-1,-1]),2,as.numeric) # Get network matrix
counties[is.na(counties)]<-0                             # Set missing ties to 0
row.names(counties)<-1:67# rNames                        # Give row names
colnames(counties)<- 1:67# cNames                        # Give column names
return(list(counties, rNames))
}
l<- florida_adjacency()
l
l[1]
l[2]
l[[2]]
source('~/GitHub/COVID19-FL/codes/simplified_florida_model.R', echo=TRUE)
k <- SIR_intervention(timeframe=60, inter_region = 0.1, intervention=4)
k[[paste("S", 1:67, sep="")]]
k
k[paste("S", 1:67, sep="")]
source('~/GitHub/COVID19-FL/codes/simplified_florida_model.R', echo=TRUE)
k <- SIR_intervention(timeframe=60, inter_region = 0.1, intervention=4)
k
k$Dead
k[Dead]
k["Dead"]
k[["Dead"]]
source('~/GitHub/COVID19-FL/codes/simplified_florida_model.R', echo=TRUE)
k <- SIR_intervention(timeframe=60, inter_region = 0.1, intervention=4)
k$Suwannee
source('~/GitHub/COVID19-FL/codes/simplified_florida_model.R', echo=TRUE)
k <- SIR_intervention(timeframe=60, inter_region = 0.1, intervention=4)
k
source('~/GitHub/COVID19-FL/codes/simplified_florida_model.R', echo=TRUE)
k <- SIR_intervention(timeframe=60, inter_region = 0.1, intervention=4)
k
Dead <- populations[1:67]-Susceptibles-Infectives-Exposed-Asymptomatic-Recovered;
names(Dead)=adj[[2]]
setwd("~/GitHub/covid19_icu/R")
runApp()
runApp()
runApp()
runApp()
runApp()
setwd("~/GitHub/covid19_icu")
devtools::load_all()
runApp()
runApp()
devtools::load_all()
runApp()
runApp('R')
runApp()
devtools::load_all()
runApp()
devtools::load_all()
runApp()
devtools::load_all()
runApp()
devtools::load_all()
runApp()
devtools::load_all()
source('~/GitHub/COVID19-FL/codes/simplified_florida_model.R', echo=TRUE)
k <- SIR_intervention(timeframe=60, inter_region = 0.1, intervention=4)
setwd("~/GitHub/COVID19-FL")
k <- SIR_intervention(timeframe=60, inter_region = 0.1, intervention=4)
setwd("~/GitHub/COVID19-FL/codes")
k <- SIR_intervention(timeframe=60, inter_region = 0.1, intervention=4)
k
?melt
source('~/GitHub/COVID19-FL/codes/simplified_florida_model.R', echo=TRUE)
source('~/GitHub/COVID19-FL/codes/simplified_florida_model.R', echo=TRUE)
k <- SIR_intervention(timeframe=60, inter_region = 0.1, intervention=4)
source('~/GitHub/COVID19-FL/codes/simplified_florida_model.R', echo=TRUE)
k <- SIR_intervention(timeframe=60, inter_region = 0.1, intervention=4)
k
source('~/GitHub/COVID19-FL/codes/simplified_florida_model.R', echo=TRUE)
k <- SIR_intervention(timeframe=60, inter_region = 0.1, intervention=4)
source('~/GitHub/COVID19-FL/codes/simplified_florida_model.R', echo=TRUE)
k <- SIR_intervention(timeframe=60, inter_region = 0.1, intervention=4)
k
source('~/GitHub/COVID19-FL/codes/simplified_florida_model.R', echo=TRUE)
k <- SIR_intervention(timeframe=60, inter_region = 0.1, intervention=4)
source('~/GitHub/COVID19-FL/codes/simplified_florida_model.R', echo=TRUE)
k <- SIR_intervention(timeframe=60, inter_region = 0.1, intervention=4)
k
source('~/GitHub/COVID19-FL/codes/simplified_florida_model.R', echo=TRUE)
k <- SIR_intervention(timeframe=60, inter_region = 0.1, intervention=4)
source('~/GitHub/COVID19-FL/codes/simplified_florida_model.R', echo=TRUE)
k <- SIR_intervention(timeframe=60, inter_region = 0.1, intervention=4)
k
k[["dea"]]
k["dea"]
source('~/GitHub/COVID19-FL/codes/simplified_florida_model.R', echo=TRUE)
k <- SIR_intervention(timeframe=60, inter_region = 0.1, intervention=4)
k
source('~/GitHub/COVID19-FL/codes/simplified_florida_model.R', echo=TRUE)
k <- SIR_intervention(timeframe=60, inter_region = 0.1, intervention=4)
k$s
k$s[variable=="Palm Beach"]
setwd("~/GitHub/covid19_icu")
devtools::load_all()
runApp()
devtools::load_all()
runApp()
hospital_queues()
runApp()
runApp('R')
runApp('R')
runApp()
devtools::load_all()
runApp()
source('~/GitHub/covid19_icu/R/queueinputs.R', echo=TRUE)
runApp()
devtools::load_all()
runApp()
runApp()
devtools::load_all()
runApp()
diag(1,201)
diag(1,201,1)
